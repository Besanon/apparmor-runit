
Install the base system

You either may use an empty unpartitioned drive or a drive with a few (up to 6) partitions but no more. There is a bug in void-installer which prevents installing the system otherwise.
Download the void base image create a bootable stick. After booting to void linux logon as root with pass voidlinux and start void-installer.

For example use a msdos partition table and create the following partions:
	1 GB Linux ext4 /boot  (p)
	20 GB Linux xfs /   (p)  - mark it as Boot!
	20 GB Linux xfs /var (p)
	extended partition with:
	4 GB Linux swap  (e)
	Xx GB Linux /home (e)

The installer finishes within some minutes. On reboot you may finish your base install:

usermod --shell /bin/bash root
xbps-install -S void-repo-nonfree nano 
nano /etc/locale.conf :
	LANG=en_US.UTF-8

If needed create additional partitions:
	fdisk /dev/sda
	3 GB Linux xfs /var/log  
	2 GB Linux xfs /var/audit
	3 GB Linux ext4 /tmp 
	5 GB Linux ext4 /opt  
	mkfs.xfs /dev/sda6   etcâ€¦
	blkid >> /etc/fstab, 
	integrate them with their UUIDs.

Update xbps:
Xbps update   xbps-install -u xbps
xbps-install -Su 
reboot

Install some basic software:

xbps-install -S linux-firmware-intel void-repo-nonfree intel-ucode linux-firmware-amd lynis mesa-dri mesa-vulkan-intel vulkan-loader intel-video-accel dbus elogind net-tools cracklib NetworkManager chrony apparmor sysstat fuse ntfs-3g polkit-elogind polkit gvfs unzip xarchiver xz bind-utils tlp iptables rkhunter
Set up base services:
	ln -s /etc/sv/dbus /var/service
	ln -s /etc/sv/tlp /var/service
	ln -s /etc/sv/elogind /var/service
	ln -s /etc/sv/NetworkManager /var/service
configure rkhunter:

configure apparmor:
	nano /etc/default/apparmor
	apparmor=complain    (later: enforce)
	changing the GRUB_CMDLINE_LINUX_DEFAULT  : include apparmor=1 security=apparmor
	update-grub

add in /etc/rc.local
	/usr/local/sbin/haveged -w 1024
	/etc/rc.local mount /proc gid=polkitd oder gid=proc (mit polkitd als mitglied der Gruppe proc

/etc/sysctl.conf

/etc/modules-load.d/onstart.conf

/etc/modprobe.d/blacklist-devices

Iptables & /proc

nano /etc/rc.local 
	if [ -e /etc/iptables/iptables.rules ]; then
	  iptables-restore /etc/iptables/iptables.rules
	fi
	ip-adressen in iptables.rules anpassen, Netzwerkeinstellungen in Einstellungen

Set rounds parameter in login.defs :
nano /etc/login.defs
	LOGIN_TIMEOUT           60
	FAILLOG_ENAB            yes
	ENCRYPT_METHOD SHA512
	SHA_CRYPT_MIN_ROUNDS 65536
	SHA_CRYPT_MAX_ROUNDS 65536

(in work, to be continued...)
